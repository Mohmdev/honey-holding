/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    portfolio: Portfolio;
    posts: Post;
    categories: Category;
    'reusable-content': ReusableContent;
    media: Media;
    assets: Asset;
    users: User;
    docs: Doc;
    tickets: Ticket;
    forms: Form;
    'form-submissions': FormSubmission;
    redirects: Redirect;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      postsInCategory: 'posts';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    portfolio: PortfolioSelect<false> | PortfolioSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'reusable-content': ReusableContentSelect<false> | ReusableContentSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    assets: AssetsSelect<false> | AssetsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    docs: DocsSelect<false> | DocsSelect<true>;
    tickets: TicketsSelect<false> | TicketsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'global-settings': GlobalSetting;
    'main-menu': MainMenu;
    footer: Footer;
  };
  globalsSelect: {
    'global-settings': GlobalSettingsSelect<false> | GlobalSettingsSelect<true>;
    'main-menu': MainMenuSelect<false> | MainMenuSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  fullTitle?: string | null;
  noindex?: boolean | null;
  hero: {
    type:
      | 'default'
      | 'contentMedia'
      | 'centeredContent'
      | 'form'
      | 'home'
      | 'homeNew'
      | 'livestream'
      | 'gradient'
      | 'three';
    fullBackground?: boolean | null;
    /**
     * Leave blank for system default
     */
    theme?: ('light' | 'dark') | null;
    enableBreadcrumbsBar?: boolean | null;
    breadcrumbsBarLinks?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    livestream?: {
      id?: string | null;
      date: string;
      hideBreadcrumbs?: boolean | null;
      richText?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      guests?:
        | {
            name?: string | null;
            link?: string | null;
            image?: (string | null) | Media;
            id?: string | null;
          }[]
        | null;
    };
    enableAnnouncement?: boolean | null;
    announcementLink?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null)
        | ({
            relationTo: 'portfolio';
            value: string | Portfolio;
          } | null);
      url?: string | null;
      label: string;
      customId?: string | null;
    };
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    primaryButtons?:
      | {
          type?: ('link' | 'npmCta') | null;
          npmCta?: {
            label: string;
          };
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    secondaryHeading?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    secondaryDescription?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'primary' | 'secondary') | null;
          };
          id?: string | null;
        }[]
      | null;
    threeCTA?: ('newsletter' | 'buttons') | null;
    newsletter?: {
      placeholder?: string | null;
      description?: string | null;
    };
    buttons?:
      | (
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('default' | 'primary' | 'secondary') | null;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'link';
            }
          | {
              command: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'command';
            }
        )[]
      | null;
    secondaryButtons?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    images?:
      | {
          image: string | Media;
          id?: string | null;
        }[]
      | null;
    enableMedia?: boolean | null;
    media?: (string | null) | Media;
    secondaryMedia?: (string | null) | Media;
    featureVideo?: (string | null) | Media;
    form?: (string | null) | Form;
    logos?:
      | {
          logoMedia: string | Media;
          id?: string | null;
        }[]
      | null;
    logoShowcaseLabel?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    logoShowcase?: (string | Media)[] | null;
  };
  layout: (
    | {
        calloutFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          logo: string | Media;
          author?: string | null;
          role?: string | null;
          images?:
            | {
                image: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'callout';
      }
    | {
        ctaFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          style?: ('buttons' | 'banner') | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          commandLine?: string | null;
          links?:
            | {
                type?: ('link' | 'npmCta') | null;
                npmCta?: {
                  label: string;
                };
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          bannerLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          bannerImage?: (string | null) | Media;
          gradientBackground?: boolean | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        cardGridFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          /**
           * These links will be placed above the card grid as calls-to-action.
           */
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          revealDescription?: boolean | null;
          cards?:
            | {
                title: string;
                description?: string | null;
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'cardGrid';
      }
    | {
        portfolioCardFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          pixels?: boolean | null;
          cards?:
            | {
                richText: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                portfolio: string | Portfolio;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioCards';
      }
    | {
        portfolioHighlightFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          portfolio: (string | Portfolio)[];
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioHighlight';
      }
    | {
        portfolioParallaxFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          items?:
            | {
                quote: string;
                author?: string | null;
                logo: string | Media;
                images?:
                  | {
                      image: string | Media;
                      id?: string | null;
                    }[]
                  | null;
                /**
                 * A label for the navigation tab at the bottom of the parallax
                 */
                tabLabel: string;
                portfolio: string | Portfolio;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioParallax';
      }
    | {
        codeFeatureFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Check this box to force this block to have a dark background.
           */
          forceDarkBackground?: boolean | null;
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentCode' | 'codeContent') | null;
          heading?: string | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          codeTabs?:
            | {
                language?: ('none' | 'js' | 'ts') | null;
                label: string;
                code: string;
                codeBlips?:
                  | {
                      row: number;
                      label: string;
                      feature: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      enableLink?: boolean | null;
                      link?: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'codeFeature';
      }
    | {
        contentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          useLeadingHeader?: boolean | null;
          leadingHeader?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          layout?: ('oneColumn' | 'twoColumns' | 'twoThirdsOneThird' | 'halfAndHalf' | 'threeColumns') | null;
          columnOne: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          columnTwo?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          columnThree?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        contentGridFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          style?: ('gridBelow' | 'sideBySide') | null;
          showNumbers?: boolean | null;
          content?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          cells?:
            | {
                content: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'contentGrid';
      }
    | {
        formFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          form: string | Form;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        hoverCardsFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          hideBackground?: boolean | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          cards?:
            | {
                title: string;
                description?: string | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'hoverCards';
      }
    | {
        hoverHighlightsFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          beforeHighlights?: string | null;
          highlights?:
            | {
                text: string;
                media?: {
                  top?: (string | null) | Media;
                  bottom?: (string | null) | Media;
                };
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          afterHighlights?: string | null;
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'hoverHighlights';
      }
    | {
        linkGridFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkGrid';
      }
    | {
        logoGridFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          enableLink?: boolean | null;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          logos?:
            | {
                logoMedia: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'logoGrid';
      }
    | {
        mediaBlockFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          position?: ('default' | 'wide') | null;
          media: string | Media;
          caption?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        mediaContentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentMedia' | 'mediaContent') | null;
          /**
           * Choose how wide the media should be.
           */
          mediaWidth?: ('stretch' | 'fit') | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          enableLink?: boolean | null;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          images?:
            | {
                image: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaContent';
      }
    | {
        mediaContentAccordionFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentMedia' | 'mediaContent') | null;
          leader?: string | null;
          heading?: string | null;
          accordion?:
            | {
                /**
                 * Choose how to position the media itself.
                 */
                position?: ('normal' | 'inset' | 'wide') | null;
                /**
                 * Select the background you want to sit behind the media.
                 */
                background?: ('none' | 'gradient' | 'scanlines') | null;
                mediaLabel: string;
                mediaDescription: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                media: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaContentAccordion';
      }
    | {
        pricingFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          plans?:
            | {
                name: string;
                hasPrice?: boolean | null;
                enableCreatePayload?: boolean | null;
                price?: string | null;
                title?: string | null;
                description?: string | null;
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                features?:
                  | {
                      icon?: ('check' | 'x') | null;
                      feature?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
          disclaimer?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricing';
      }
    | {
        reusableContentBlockFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          reusableContent: string | ReusableContent;
          /**
           * This is a custom ID that can be used to target this block with CSS or JavaScript.
           */
          customId?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'reusableContentBlock';
      }
    | {
        sliderFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          introContent?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'primary' | 'secondary') | null;
                };
                id?: string | null;
              }[]
            | null;
          quoteSlides: {
            quote: string;
            author: string;
            role?: string | null;
            logo?: (string | null) | Media;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null)
                | ({
                    relationTo: 'portfolio';
                    value: string | Portfolio;
                  } | null);
              url?: string | null;
              label: string;
              customId?: string | null;
            };
            id?: string | null;
          }[];
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'slider';
      }
    | {
        statementFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          assetType?: ('media' | 'code') | null;
          media?: (string | null) | Media;
          code?: string | null;
          mediaWidth?: ('small' | 'medium' | 'large' | 'full') | null;
          backgroundGlow?: ('none' | 'colorful' | 'white') | null;
          assetCaption?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'statement';
      }
    | StepsBlock
    | {
        stickyHighlightsFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          highlights?:
            | {
                richText: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                type?: ('code' | 'media') | null;
                code?: string | null;
                codeBlips?:
                  | {
                      row: number;
                      label: string;
                      feature: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      enableLink?: boolean | null;
                      link?: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                media?: (string | null) | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'stickyHighlights';
      }
    | ExampleTabsBlock
  )[];
  slug: string;
  slugLock?: boolean | null;
  authors: (string | User)[];
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  parent?: (string | null) | Page;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  image: string | Media;
  useVideo?: boolean | null;
  videoUrl?: string | null;
  excerpt: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  content: (
    | {
        bannerFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          type?: ('default' | 'success' | 'warning' | 'error') | null;
          addCheckmark?: boolean | null;
          content: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        blogContentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogContent';
      }
    | {
        codeFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          language?: ('none' | 'js' | 'ts') | null;
          code: string;
          codeBlips?:
            | {
                row: number;
                label: string;
                feature: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'code';
      }
    | {
        blogMarkdownFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          markdown: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogMarkdown';
      }
    | {
        mediaBlockFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          position?: ('default' | 'wide') | null;
          media: string | Media;
          caption?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        reusableContentBlockFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          reusableContent: string | ReusableContent;
          /**
           * This is a custom ID that can be used to target this block with CSS or JavaScript.
           */
          customId?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'reusableContentBlock';
      }
  )[];
  lexicalContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  slug: string;
  slugLock?: boolean | null;
  authors: (string | User)[];
  publishedOn: string;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  title: string;
  /**
   * Alt text used for SEO and accessibility
   */
  alt: string;
  altLock?: boolean | null;
  /**
   * Optional
   */
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Dark variation of the media for dark mode. (Optional)
   */
  mediaDarkModeFallback?: (string | null) | Media;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio".
 */
export interface Portfolio {
  id: string;
  title: string;
  introContent: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  industry?: string | null;
  useCase?: string | null;
  featuredImage: string | Media;
  layout?:
    | (
        | {
            calloutFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              logo: string | Media;
              author?: string | null;
              role?: string | null;
              images?:
                | {
                    image: string | Media;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'callout';
          }
        | {
            ctaFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              style?: ('buttons' | 'banner') | null;
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              commandLine?: string | null;
              links?:
                | {
                    type?: ('link' | 'npmCta') | null;
                    npmCta?: {
                      label: string;
                    };
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              bannerLink?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
              bannerImage?: (string | null) | Media;
              gradientBackground?: boolean | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            cardGridFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * These links will be placed above the card grid as calls-to-action.
               */
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              revealDescription?: boolean | null;
              cards?:
                | {
                    title: string;
                    description?: string | null;
                    enableLink?: boolean | null;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'cardGrid';
          }
        | {
            portfolioCardFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              pixels?: boolean | null;
              cards?:
                | {
                    richText: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    portfolio: string | Portfolio;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'portfolioCards';
          }
        | {
            portfolioHighlightFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              portfolio: (string | Portfolio)[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'portfolioHighlight';
          }
        | {
            portfolioParallaxFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              items?:
                | {
                    quote: string;
                    author?: string | null;
                    logo: string | Media;
                    images?:
                      | {
                          image: string | Media;
                          id?: string | null;
                        }[]
                      | null;
                    /**
                     * A label for the navigation tab at the bottom of the parallax
                     */
                    tabLabel: string;
                    portfolio: string | Portfolio;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'portfolioParallax';
          }
        | {
            codeFeatureFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              /**
               * Check this box to force this block to have a dark background.
               */
              forceDarkBackground?: boolean | null;
              /**
               * Choose how to align the content for this block.
               */
              alignment?: ('contentCode' | 'codeContent') | null;
              heading?: string | null;
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              codeTabs?:
                | {
                    language?: ('none' | 'js' | 'ts') | null;
                    label: string;
                    code: string;
                    codeBlips?:
                      | {
                          row: number;
                          label: string;
                          feature: {
                            root: {
                              type: string;
                              children: {
                                type: string;
                                version: number;
                                [k: string]: unknown;
                              }[];
                              direction: ('ltr' | 'rtl') | null;
                              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                              indent: number;
                              version: number;
                            };
                            [k: string]: unknown;
                          };
                          enableLink?: boolean | null;
                          link?: {
                            type?: ('reference' | 'custom') | null;
                            newTab?: boolean | null;
                            reference?:
                              | ({
                                  relationTo: 'pages';
                                  value: string | Page;
                                } | null)
                              | ({
                                  relationTo: 'posts';
                                  value: string | Post;
                                } | null)
                              | ({
                                  relationTo: 'portfolio';
                                  value: string | Portfolio;
                                } | null);
                            url?: string | null;
                            label: string;
                            customId?: string | null;
                          };
                          id?: string | null;
                        }[]
                      | null;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'codeFeature';
          }
        | {
            contentFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              useLeadingHeader?: boolean | null;
              leadingHeader?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              layout?: ('oneColumn' | 'twoColumns' | 'twoThirdsOneThird' | 'halfAndHalf' | 'threeColumns') | null;
              columnOne: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              columnTwo?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              columnThree?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            contentGridFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              style?: ('gridBelow' | 'sideBySide') | null;
              showNumbers?: boolean | null;
              content?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              cells?:
                | {
                    content: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentGrid';
          }
        | {
            formFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              form: string | Form;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'form';
          }
        | {
            hoverCardsFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              hideBackground?: boolean | null;
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              cards?:
                | {
                    title: string;
                    description?: string | null;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'hoverCards';
          }
        | {
            hoverHighlightsFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              beforeHighlights?: string | null;
              highlights?:
                | {
                    text: string;
                    media?: {
                      top?: (string | null) | Media;
                      bottom?: (string | null) | Media;
                    };
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              afterHighlights?: string | null;
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'hoverHighlights';
          }
        | {
            linkGridFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'linkGrid';
          }
        | {
            logoGridFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              enableLink?: boolean | null;
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
              logos?:
                | {
                    logoMedia: string | Media;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'logoGrid';
          }
        | {
            mediaBlockFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              position?: ('default' | 'wide') | null;
              media: string | Media;
              caption?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaBlock';
          }
        | {
            mediaContentFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              /**
               * Choose how to align the content for this block.
               */
              alignment?: ('contentMedia' | 'mediaContent') | null;
              /**
               * Choose how wide the media should be.
               */
              mediaWidth?: ('stretch' | 'fit') | null;
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              enableLink?: boolean | null;
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
              images?:
                | {
                    image: string | Media;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaContent';
          }
        | {
            mediaContentAccordionFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              /**
               * Choose how to align the content for this block.
               */
              alignment?: ('contentMedia' | 'mediaContent') | null;
              leader?: string | null;
              heading?: string | null;
              accordion?:
                | {
                    /**
                     * Choose how to position the media itself.
                     */
                    position?: ('normal' | 'inset' | 'wide') | null;
                    /**
                     * Select the background you want to sit behind the media.
                     */
                    background?: ('none' | 'gradient' | 'scanlines') | null;
                    mediaLabel: string;
                    mediaDescription: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    enableLink?: boolean | null;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    media: string | Media;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaContentAccordion';
          }
        | {
            pricingFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              plans?:
                | {
                    name: string;
                    hasPrice?: boolean | null;
                    enableCreatePayload?: boolean | null;
                    price?: string | null;
                    title?: string | null;
                    description?: string | null;
                    enableLink?: boolean | null;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    features?:
                      | {
                          icon?: ('check' | 'x') | null;
                          feature?: string | null;
                          id?: string | null;
                        }[]
                      | null;
                    id?: string | null;
                  }[]
                | null;
              disclaimer?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricing';
          }
        | {
            reusableContentBlockFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              reusableContent: string | ReusableContent;
              /**
               * This is a custom ID that can be used to target this block with CSS or JavaScript.
               */
              customId?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'reusableContentBlock';
          }
        | {
            sliderFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              introContent?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                      /**
                       * Choose how the link should be rendered.
                       */
                      appearance?: ('default' | 'primary' | 'secondary') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              quoteSlides: {
                quote: string;
                author: string;
                role?: string | null;
                logo?: (string | null) | Media;
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'slider';
          }
        | {
            statementFields: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              assetType?: ('media' | 'code') | null;
              media?: (string | null) | Media;
              code?: string | null;
              mediaWidth?: ('small' | 'medium' | 'large' | 'full') | null;
              backgroundGlow?: ('none' | 'colorful' | 'white') | null;
              assetCaption?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'statement';
          }
        | StepsBlock
        | {
            stickyHighlightsFields?: {
              settings?: {
                /**
                 * Leave blank for system default
                 */
                theme?: ('light' | 'dark') | null;
                background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
              };
              highlights?:
                | {
                    richText: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    enableLink?: boolean | null;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null)
                        | ({
                            relationTo: 'portfolio';
                            value: string | Portfolio;
                          } | null);
                      url?: string | null;
                      label: string;
                      customId?: string | null;
                    };
                    type?: ('code' | 'media') | null;
                    code?: string | null;
                    codeBlips?:
                      | {
                          row: number;
                          label: string;
                          feature: {
                            root: {
                              type: string;
                              children: {
                                type: string;
                                version: number;
                                [k: string]: unknown;
                              }[];
                              direction: ('ltr' | 'rtl') | null;
                              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                              indent: number;
                              version: number;
                            };
                            [k: string]: unknown;
                          };
                          enableLink?: boolean | null;
                          link?: {
                            type?: ('reference' | 'custom') | null;
                            newTab?: boolean | null;
                            reference?:
                              | ({
                                  relationTo: 'pages';
                                  value: string | Page;
                                } | null)
                              | ({
                                  relationTo: 'posts';
                                  value: string | Post;
                                } | null)
                              | ({
                                  relationTo: 'portfolio';
                                  value: string | Portfolio;
                                } | null);
                            url?: string | null;
                            label: string;
                            customId?: string | null;
                          };
                          id?: string | null;
                        }[]
                      | null;
                    media?: (string | null) | Media;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'stickyHighlights';
          }
        | ExampleTabsBlock
      )[]
    | null;
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  slug: string;
  slugLock?: boolean | null;
  url?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reusable-content".
 */
export interface ReusableContent {
  id: string;
  title: string;
  layout: (
    | {
        bannerFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          type?: ('default' | 'success' | 'warning' | 'error') | null;
          addCheckmark?: boolean | null;
          content: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        blogContentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogContent';
      }
    | {
        blogMarkdownFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          markdown: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogMarkdown';
      }
    | {
        calloutFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          logo: string | Media;
          author?: string | null;
          role?: string | null;
          images?:
            | {
                image: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'callout';
      }
    | {
        ctaFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          style?: ('buttons' | 'banner') | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          commandLine?: string | null;
          links?:
            | {
                type?: ('link' | 'npmCta') | null;
                npmCta?: {
                  label: string;
                };
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          bannerLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          bannerImage?: (string | null) | Media;
          gradientBackground?: boolean | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        cardGridFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          /**
           * These links will be placed above the card grid as calls-to-action.
           */
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          revealDescription?: boolean | null;
          cards?:
            | {
                title: string;
                description?: string | null;
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'cardGrid';
      }
    | {
        portfolioCardFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          pixels?: boolean | null;
          cards?:
            | {
                richText: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                portfolio: string | Portfolio;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioCards';
      }
    | {
        portfolioHighlightFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          portfolio: (string | Portfolio)[];
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioHighlight';
      }
    | {
        portfolioParallaxFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          items?:
            | {
                quote: string;
                author?: string | null;
                logo: string | Media;
                images?:
                  | {
                      image: string | Media;
                      id?: string | null;
                    }[]
                  | null;
                /**
                 * A label for the navigation tab at the bottom of the parallax
                 */
                tabLabel: string;
                portfolio: string | Portfolio;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'portfolioParallax';
      }
    | {
        codeFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          language?: ('none' | 'js' | 'ts') | null;
          code: string;
          codeBlips?:
            | {
                row: number;
                label: string;
                feature: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'code';
      }
    | {
        codeFeatureFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Check this box to force this block to have a dark background.
           */
          forceDarkBackground?: boolean | null;
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentCode' | 'codeContent') | null;
          heading?: string | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          codeTabs?:
            | {
                language?: ('none' | 'js' | 'ts') | null;
                label: string;
                code: string;
                codeBlips?:
                  | {
                      row: number;
                      label: string;
                      feature: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      enableLink?: boolean | null;
                      link?: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'codeFeature';
      }
    | {
        contentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          useLeadingHeader?: boolean | null;
          leadingHeader?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          layout?: ('oneColumn' | 'twoColumns' | 'twoThirdsOneThird' | 'halfAndHalf' | 'threeColumns') | null;
          columnOne: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          columnTwo?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          columnThree?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        contentGridFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          style?: ('gridBelow' | 'sideBySide') | null;
          showNumbers?: boolean | null;
          content?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          cells?:
            | {
                content: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'contentGrid';
      }
    | ExampleTabsBlock
    | {
        formFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          form: string | Form;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        hoverCardsFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          hideBackground?: boolean | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          cards?:
            | {
                title: string;
                description?: string | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'hoverCards';
      }
    | {
        hoverHighlightsFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          beforeHighlights?: string | null;
          highlights?:
            | {
                text: string;
                media?: {
                  top?: (string | null) | Media;
                  bottom?: (string | null) | Media;
                };
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          afterHighlights?: string | null;
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'hoverHighlights';
      }
    | {
        linkGridFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkGrid';
      }
    | {
        logoGridFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          enableLink?: boolean | null;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          logos?:
            | {
                logoMedia: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'logoGrid';
      }
    | {
        mediaBlockFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          position?: ('default' | 'wide') | null;
          media: string | Media;
          caption?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        mediaContentFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentMedia' | 'mediaContent') | null;
          /**
           * Choose how wide the media should be.
           */
          mediaWidth?: ('stretch' | 'fit') | null;
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          enableLink?: boolean | null;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'portfolio';
                  value: string | Portfolio;
                } | null);
            url?: string | null;
            label: string;
            customId?: string | null;
          };
          images?:
            | {
                image: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaContent';
      }
    | {
        mediaContentAccordionFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          /**
           * Choose how to align the content for this block.
           */
          alignment?: ('contentMedia' | 'mediaContent') | null;
          leader?: string | null;
          heading?: string | null;
          accordion?:
            | {
                /**
                 * Choose how to position the media itself.
                 */
                position?: ('normal' | 'inset' | 'wide') | null;
                /**
                 * Select the background you want to sit behind the media.
                 */
                background?: ('none' | 'gradient' | 'scanlines') | null;
                mediaLabel: string;
                mediaDescription: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                media: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaContentAccordion';
      }
    | {
        pricingFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          plans?:
            | {
                name: string;
                hasPrice?: boolean | null;
                enableCreatePayload?: boolean | null;
                price?: string | null;
                title?: string | null;
                description?: string | null;
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                features?:
                  | {
                      icon?: ('check' | 'x') | null;
                      feature?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
          disclaimer?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricing';
      }
    | {
        sliderFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          introContent?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'primary' | 'secondary') | null;
                };
                id?: string | null;
              }[]
            | null;
          quoteSlides: {
            quote: string;
            author: string;
            role?: string | null;
            logo?: (string | null) | Media;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null)
                | ({
                    relationTo: 'portfolio';
                    value: string | Portfolio;
                  } | null);
              url?: string | null;
              label: string;
              customId?: string | null;
            };
            id?: string | null;
          }[];
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'slider';
      }
    | {
        statementFields: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          richText: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          assetType?: ('media' | 'code') | null;
          media?: (string | null) | Media;
          code?: string | null;
          mediaWidth?: ('small' | 'medium' | 'large' | 'full') | null;
          backgroundGlow?: ('none' | 'colorful' | 'white') | null;
          assetCaption?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'statement';
      }
    | StepsBlock
    | {
        stickyHighlightsFields?: {
          settings?: {
            /**
             * Leave blank for system default
             */
            theme?: ('light' | 'dark') | null;
            background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
          };
          highlights?:
            | {
                richText: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                enableLink?: boolean | null;
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                type?: ('code' | 'media') | null;
                code?: string | null;
                codeBlips?:
                  | {
                      row: number;
                      label: string;
                      feature: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      enableLink?: boolean | null;
                      link?: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                media?: (string | null) | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'stickyHighlights';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ExampleTabsBlock".
 */
export interface ExampleTabsBlock {
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tabs: {
    label: string;
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    examples: (CodeExampleBlock | MediaExampleBlock)[];
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'exampleTabs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeExampleBlock".
 */
export interface CodeExampleBlock {
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'CodeExampleBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaExampleBlock".
 */
export interface MediaExampleBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'MediaExampleBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsBlock".
 */
export interface StepsBlock {
  stepsFields: {
    settings?: {
      /**
       * Leave blank for system default
       */
      theme?: ('light' | 'dark') | null;
      background?: ('solid' | 'transparent' | 'gradientUp' | 'gradientDown') | null;
    };
    steps: {
      content: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      media?: (string | null) | Media;
      id?: string | null;
    }[];
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'steps';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  postsInCategory?: {
    docs?: (string | Post)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  /**
   * Example: `nexwebdev`
   */
  twitter?: string | null;
  photo?: (string | null) | Media;
  role: 'admin' | 'editor' | 'public';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets".
 */
export interface Asset {
  id: string;
  title: string;
  /**
   * Alt text used for SEO and accessibility
   */
  alt: string;
  altLock?: boolean | null;
  /**
   * Dark variation of the asset for dark mode. (Optional)
   */
  assetDarkModeFallback?: (string | null) | Asset;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "docs".
 */
export interface Doc {
  id: string;
  dummy?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets".
 */
export interface Ticket {
  id: string;
  dummy?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'portfolio';
          value: string | Portfolio;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: string | Post;
      }
    | {
        relationTo: 'portfolio';
        value: string | Portfolio;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'portfolio';
        value: string | Portfolio;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'reusable-content';
        value: string | ReusableContent;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'assets';
        value: string | Asset;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'docs';
        value: string | Doc;
      } | null)
    | ({
        relationTo: 'tickets';
        value: string | Ticket;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  fullTitle?: T;
  noindex?: T;
  hero?:
    | T
    | {
        type?: T;
        fullBackground?: T;
        theme?: T;
        enableBreadcrumbsBar?: T;
        breadcrumbsBarLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                  };
              id?: T;
            };
        livestream?:
          | T
          | {
              id?: T;
              date?: T;
              hideBreadcrumbs?: T;
              richText?: T;
              guests?:
                | T
                | {
                    name?: T;
                    link?: T;
                    image?: T;
                    id?: T;
                  };
            };
        enableAnnouncement?: T;
        announcementLink?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              customId?: T;
            };
        richText?: T;
        description?: T;
        primaryButtons?:
          | T
          | {
              type?: T;
              npmCta?:
                | T
                | {
                    label?: T;
                  };
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                  };
              id?: T;
            };
        secondaryHeading?: T;
        secondaryDescription?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        threeCTA?: T;
        newsletter?:
          | T
          | {
              placeholder?: T;
              description?: T;
            };
        buttons?:
          | T
          | {
              link?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                          appearance?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
              command?:
                | T
                | {
                    command?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        secondaryButtons?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                  };
              id?: T;
            };
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
        enableMedia?: T;
        media?: T;
        secondaryMedia?: T;
        featureVideo?: T;
        form?: T;
        logos?:
          | T
          | {
              logoMedia?: T;
              id?: T;
            };
        logoShowcaseLabel?: T;
        logoShowcase?: T;
      };
  layout?:
    | T
    | {
        callout?:
          | T
          | {
              calloutFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    logo?: T;
                    author?: T;
                    role?: T;
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              ctaFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    richText?: T;
                    commandLine?: T;
                    links?:
                      | T
                      | {
                          type?: T;
                          npmCta?:
                            | T
                            | {
                                label?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    bannerLink?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    bannerImage?: T;
                    gradientBackground?: T;
                  };
              id?: T;
              blockName?: T;
            };
        cardGrid?:
          | T
          | {
              cardGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    revealDescription?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioCards?:
          | T
          | {
              portfolioCardFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    pixels?: T;
                    cards?:
                      | T
                      | {
                          richText?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioHighlight?:
          | T
          | {
              portfolioHighlightFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    portfolio?: T;
                  };
              id?: T;
              blockName?: T;
            };
        portfolioParallax?:
          | T
          | {
              portfolioParallaxFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    items?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          logo?: T;
                          images?:
                            | T
                            | {
                                image?: T;
                                id?: T;
                              };
                          tabLabel?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        codeFeature?:
          | T
          | {
              codeFeatureFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    forceDarkBackground?: T;
                    alignment?: T;
                    heading?: T;
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    codeTabs?:
                      | T
                      | {
                          language?: T;
                          label?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              contentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    useLeadingHeader?: T;
                    leadingHeader?: T;
                    layout?: T;
                    columnOne?: T;
                    columnTwo?: T;
                    columnThree?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contentGrid?:
          | T
          | {
              contentGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    showNumbers?: T;
                    content?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    cells?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              formFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    form?: T;
                  };
              id?: T;
              blockName?: T;
            };
        hoverCards?:
          | T
          | {
              hoverCardsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    hideBackground?: T;
                    richText?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        hoverHighlights?:
          | T
          | {
              hoverHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    beforeHighlights?: T;
                    highlights?:
                      | T
                      | {
                          text?: T;
                          media?:
                            | T
                            | {
                                top?: T;
                                bottom?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    afterHighlights?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        linkGrid?:
          | T
          | {
              linkGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        logoGrid?:
          | T
          | {
              logoGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    logos?:
                      | T
                      | {
                          logoMedia?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              mediaBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    position?: T;
                    media?: T;
                    caption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaContent?:
          | T
          | {
              mediaContentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    mediaWidth?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaContentAccordion?:
          | T
          | {
              mediaContentAccordionFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    leader?: T;
                    heading?: T;
                    accordion?:
                      | T
                      | {
                          position?: T;
                          background?: T;
                          mediaLabel?: T;
                          mediaDescription?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricing?:
          | T
          | {
              pricingFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    plans?:
                      | T
                      | {
                          name?: T;
                          hasPrice?: T;
                          enableCreatePayload?: T;
                          price?: T;
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          features?:
                            | T
                            | {
                                icon?: T;
                                feature?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                    disclaimer?: T;
                  };
              id?: T;
              blockName?: T;
            };
        reusableContentBlock?:
          | T
          | {
              reusableContentBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    reusableContent?: T;
                    customId?: T;
                  };
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              sliderFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    introContent?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                                appearance?: T;
                              };
                          id?: T;
                        };
                    quoteSlides?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          role?: T;
                          logo?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        statement?:
          | T
          | {
              statementFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    assetType?: T;
                    media?: T;
                    code?: T;
                    mediaWidth?: T;
                    backgroundGlow?: T;
                    assetCaption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        steps?: T | StepsBlockSelect<T>;
        stickyHighlights?:
          | T
          | {
              stickyHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    highlights?:
                      | T
                      | {
                          richText?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          type?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        exampleTabs?: T | ExampleTabsBlockSelect<T>;
      };
  slug?: T;
  slugLock?: T;
  authors?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsBlock_select".
 */
export interface StepsBlockSelect<T extends boolean = true> {
  stepsFields?:
    | T
    | {
        settings?:
          | T
          | {
              theme?: T;
              background?: T;
            };
        steps?:
          | T
          | {
              content?: T;
              media?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ExampleTabsBlock_select".
 */
export interface ExampleTabsBlockSelect<T extends boolean = true> {
  content?: T;
  tabs?:
    | T
    | {
        label?: T;
        content?: T;
        examples?:
          | T
          | {
              CodeExampleBlock?: T | CodeExampleBlockSelect<T>;
              MediaExampleBlock?: T | MediaExampleBlockSelect<T>;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeExampleBlock_select".
 */
export interface CodeExampleBlockSelect<T extends boolean = true> {
  code?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaExampleBlock_select".
 */
export interface MediaExampleBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio_select".
 */
export interface PortfolioSelect<T extends boolean = true> {
  title?: T;
  introContent?: T;
  industry?: T;
  useCase?: T;
  featuredImage?: T;
  layout?:
    | T
    | {
        callout?:
          | T
          | {
              calloutFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    logo?: T;
                    author?: T;
                    role?: T;
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              ctaFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    richText?: T;
                    commandLine?: T;
                    links?:
                      | T
                      | {
                          type?: T;
                          npmCta?:
                            | T
                            | {
                                label?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    bannerLink?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    bannerImage?: T;
                    gradientBackground?: T;
                  };
              id?: T;
              blockName?: T;
            };
        cardGrid?:
          | T
          | {
              cardGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    revealDescription?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioCards?:
          | T
          | {
              portfolioCardFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    pixels?: T;
                    cards?:
                      | T
                      | {
                          richText?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioHighlight?:
          | T
          | {
              portfolioHighlightFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    portfolio?: T;
                  };
              id?: T;
              blockName?: T;
            };
        portfolioParallax?:
          | T
          | {
              portfolioParallaxFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    items?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          logo?: T;
                          images?:
                            | T
                            | {
                                image?: T;
                                id?: T;
                              };
                          tabLabel?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        codeFeature?:
          | T
          | {
              codeFeatureFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    forceDarkBackground?: T;
                    alignment?: T;
                    heading?: T;
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    codeTabs?:
                      | T
                      | {
                          language?: T;
                          label?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              contentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    useLeadingHeader?: T;
                    leadingHeader?: T;
                    layout?: T;
                    columnOne?: T;
                    columnTwo?: T;
                    columnThree?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contentGrid?:
          | T
          | {
              contentGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    showNumbers?: T;
                    content?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    cells?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              formFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    form?: T;
                  };
              id?: T;
              blockName?: T;
            };
        hoverCards?:
          | T
          | {
              hoverCardsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    hideBackground?: T;
                    richText?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        hoverHighlights?:
          | T
          | {
              hoverHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    beforeHighlights?: T;
                    highlights?:
                      | T
                      | {
                          text?: T;
                          media?:
                            | T
                            | {
                                top?: T;
                                bottom?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    afterHighlights?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        linkGrid?:
          | T
          | {
              linkGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        logoGrid?:
          | T
          | {
              logoGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    logos?:
                      | T
                      | {
                          logoMedia?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              mediaBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    position?: T;
                    media?: T;
                    caption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaContent?:
          | T
          | {
              mediaContentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    mediaWidth?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaContentAccordion?:
          | T
          | {
              mediaContentAccordionFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    leader?: T;
                    heading?: T;
                    accordion?:
                      | T
                      | {
                          position?: T;
                          background?: T;
                          mediaLabel?: T;
                          mediaDescription?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricing?:
          | T
          | {
              pricingFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    plans?:
                      | T
                      | {
                          name?: T;
                          hasPrice?: T;
                          enableCreatePayload?: T;
                          price?: T;
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          features?:
                            | T
                            | {
                                icon?: T;
                                feature?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                    disclaimer?: T;
                  };
              id?: T;
              blockName?: T;
            };
        reusableContentBlock?:
          | T
          | {
              reusableContentBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    reusableContent?: T;
                    customId?: T;
                  };
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              sliderFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    introContent?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                                appearance?: T;
                              };
                          id?: T;
                        };
                    quoteSlides?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          role?: T;
                          logo?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        statement?:
          | T
          | {
              statementFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    assetType?: T;
                    media?: T;
                    code?: T;
                    mediaWidth?: T;
                    backgroundGlow?: T;
                    assetCaption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        steps?: T | StepsBlockSelect<T>;
        stickyHighlights?:
          | T
          | {
              stickyHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    highlights?:
                      | T
                      | {
                          richText?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          type?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        exampleTabs?: T | ExampleTabsBlockSelect<T>;
      };
  relatedPosts?: T;
  categories?: T;
  slug?: T;
  slugLock?: T;
  url?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  useVideo?: T;
  videoUrl?: T;
  excerpt?: T;
  content?:
    | T
    | {
        banner?:
          | T
          | {
              bannerFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    type?: T;
                    addCheckmark?: T;
                    content?: T;
                  };
              id?: T;
              blockName?: T;
            };
        blogContent?:
          | T
          | {
              blogContentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        code?:
          | T
          | {
              codeFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    language?: T;
                    code?: T;
                    codeBlips?:
                      | T
                      | {
                          row?: T;
                          label?: T;
                          feature?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        blogMarkdown?:
          | T
          | {
              blogMarkdownFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    markdown?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              mediaBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    position?: T;
                    media?: T;
                    caption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        reusableContentBlock?:
          | T
          | {
              reusableContentBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    reusableContent?: T;
                    customId?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  lexicalContent?: T;
  relatedPosts?: T;
  categories?: T;
  slug?: T;
  slugLock?: T;
  authors?: T;
  publishedOn?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  postsInCategory?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reusable-content_select".
 */
export interface ReusableContentSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        banner?:
          | T
          | {
              bannerFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    type?: T;
                    addCheckmark?: T;
                    content?: T;
                  };
              id?: T;
              blockName?: T;
            };
        blogContent?:
          | T
          | {
              blogContentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        blogMarkdown?:
          | T
          | {
              blogMarkdownFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    markdown?: T;
                  };
              id?: T;
              blockName?: T;
            };
        callout?:
          | T
          | {
              calloutFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    logo?: T;
                    author?: T;
                    role?: T;
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              ctaFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    richText?: T;
                    commandLine?: T;
                    links?:
                      | T
                      | {
                          type?: T;
                          npmCta?:
                            | T
                            | {
                                label?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    bannerLink?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    bannerImage?: T;
                    gradientBackground?: T;
                  };
              id?: T;
              blockName?: T;
            };
        cardGrid?:
          | T
          | {
              cardGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    revealDescription?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioCards?:
          | T
          | {
              portfolioCardFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    pixels?: T;
                    cards?:
                      | T
                      | {
                          richText?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        portfolioHighlight?:
          | T
          | {
              portfolioHighlightFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    portfolio?: T;
                  };
              id?: T;
              blockName?: T;
            };
        portfolioParallax?:
          | T
          | {
              portfolioParallaxFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    items?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          logo?: T;
                          images?:
                            | T
                            | {
                                image?: T;
                                id?: T;
                              };
                          tabLabel?: T;
                          portfolio?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        code?:
          | T
          | {
              codeFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    language?: T;
                    code?: T;
                    codeBlips?:
                      | T
                      | {
                          row?: T;
                          label?: T;
                          feature?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        codeFeature?:
          | T
          | {
              codeFeatureFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    forceDarkBackground?: T;
                    alignment?: T;
                    heading?: T;
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    codeTabs?:
                      | T
                      | {
                          language?: T;
                          label?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              contentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    useLeadingHeader?: T;
                    leadingHeader?: T;
                    layout?: T;
                    columnOne?: T;
                    columnTwo?: T;
                    columnThree?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contentGrid?:
          | T
          | {
              contentGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    style?: T;
                    showNumbers?: T;
                    content?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    cells?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        exampleTabs?: T | ExampleTabsBlockSelect<T>;
        form?:
          | T
          | {
              formFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    form?: T;
                  };
              id?: T;
              blockName?: T;
            };
        hoverCards?:
          | T
          | {
              hoverCardsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    hideBackground?: T;
                    richText?: T;
                    cards?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        hoverHighlights?:
          | T
          | {
              hoverHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    beforeHighlights?: T;
                    highlights?:
                      | T
                      | {
                          text?: T;
                          media?:
                            | T
                            | {
                                top?: T;
                                bottom?: T;
                              };
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    afterHighlights?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        linkGrid?:
          | T
          | {
              linkGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        logoGrid?:
          | T
          | {
              logoGridFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    logos?:
                      | T
                      | {
                          logoMedia?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              mediaBlockFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    position?: T;
                    media?: T;
                    caption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaContent?:
          | T
          | {
              mediaContentFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    mediaWidth?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    images?:
                      | T
                      | {
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        mediaContentAccordion?:
          | T
          | {
              mediaContentAccordionFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    alignment?: T;
                    leader?: T;
                    heading?: T;
                    accordion?:
                      | T
                      | {
                          position?: T;
                          background?: T;
                          mediaLabel?: T;
                          mediaDescription?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricing?:
          | T
          | {
              pricingFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    plans?:
                      | T
                      | {
                          name?: T;
                          hasPrice?: T;
                          enableCreatePayload?: T;
                          price?: T;
                          title?: T;
                          description?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          features?:
                            | T
                            | {
                                icon?: T;
                                feature?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                    disclaimer?: T;
                  };
              id?: T;
              blockName?: T;
            };
        slider?:
          | T
          | {
              sliderFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    introContent?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                                appearance?: T;
                              };
                          id?: T;
                        };
                    quoteSlides?:
                      | T
                      | {
                          quote?: T;
                          author?: T;
                          role?: T;
                          logo?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        statement?:
          | T
          | {
              statementFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    richText?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                    assetType?: T;
                    media?: T;
                    code?: T;
                    mediaWidth?: T;
                    backgroundGlow?: T;
                    assetCaption?: T;
                  };
              id?: T;
              blockName?: T;
            };
        steps?: T | StepsBlockSelect<T>;
        stickyHighlights?:
          | T
          | {
              stickyHighlightsFields?:
                | T
                | {
                    settings?:
                      | T
                      | {
                          theme?: T;
                          background?: T;
                        };
                    highlights?:
                      | T
                      | {
                          richText?: T;
                          enableLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          type?: T;
                          code?: T;
                          codeBlips?:
                            | T
                            | {
                                row?: T;
                                label?: T;
                                feature?: T;
                                enableLink?: T;
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      customId?: T;
                                    };
                                id?: T;
                              };
                          media?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  title?: T;
  alt?: T;
  altLock?: T;
  caption?: T;
  mediaDarkModeFallback?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets_select".
 */
export interface AssetsSelect<T extends boolean = true> {
  title?: T;
  alt?: T;
  altLock?: T;
  assetDarkModeFallback?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  twitter?: T;
  photo?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "docs_select".
 */
export interface DocsSelect<T extends boolean = true> {
  dummy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets_select".
 */
export interface TicketsSelect<T extends boolean = true> {
  dummy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-settings".
 */
export interface GlobalSetting {
  id: string;
  siteIdentity?: {
    siteName?: string | null;
    siteDescription?: string | null;
  };
  branding?: {
    /**
     * Light-colored version of your logo optimized for dark backgrounds and dark mode displays.
     */
    logo?: (string | null) | Asset;
    /**
     * Dark-colored version of your logo optimized for light backgrounds and standard displays.
     */
    logoSquare?: (string | null) | Asset;
    /**
     * The small icon that is displayed in the browser tab. Recommended size: 32x32px.
     */
    favicon?: (string | null) | Asset;
  };
  contactInfo?: {
    contactName?: string | null;
    contactEmail?: string | null;
    contactPhone?: string | null;
    contactAddress?: string | null;
    socialMedia?: {
      facebook?: string | null;
      twitter?: string | null;
      instagram?: string | null;
      linkedin?: string | null;
      youtube?: string | null;
      whatsapp?: string | null;
      telegram?: string | null;
    };
  };
  globalSeo?: {
    keywords?: string | null;
    /**
     * The image that will appear when sharing your site on social media.
     */
    ogImage?: (string | null) | Asset;
  };
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu".
 */
export interface MainMenu {
  id: string;
  tabs?:
    | {
        label: string;
        enableDirectLink?: boolean | null;
        enableDropdown?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'portfolio';
                value: string | Portfolio;
              } | null);
          url?: string | null;
          customId?: string | null;
        };
        description?: string | null;
        descriptionLinks?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        navItems?:
          | {
              style?: ('default' | 'featured' | 'list') | null;
              defaultLink?: {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null)
                    | ({
                        relationTo: 'portfolio';
                        value: string | Portfolio;
                      } | null);
                  url?: string | null;
                  label: string;
                  customId?: string | null;
                };
                description?: string | null;
              };
              featuredLink?: {
                tag?: string | null;
                label?: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                } | null;
                links?:
                  | {
                      link: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
              };
              listLinks?: {
                tag?: string | null;
                links?:
                  | {
                      link: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: string | Page;
                            } | null)
                          | ({
                              relationTo: 'posts';
                              value: string | Post;
                            } | null)
                          | ({
                              relationTo: 'portfolio';
                              value: string | Portfolio;
                            } | null);
                        url?: string | null;
                        label: string;
                        customId?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  menuCta: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'portfolio';
          value: string | Portfolio;
        } | null);
    url?: string | null;
    label: string;
    customId?: string | null;
  };
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  columns?:
    | {
        label: string;
        navItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'portfolio';
                      value: string | Portfolio;
                    } | null);
                url?: string | null;
                label: string;
                customId?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-settings_select".
 */
export interface GlobalSettingsSelect<T extends boolean = true> {
  siteIdentity?:
    | T
    | {
        siteName?: T;
        siteDescription?: T;
      };
  branding?:
    | T
    | {
        logo?: T;
        logoSquare?: T;
        favicon?: T;
      };
  contactInfo?:
    | T
    | {
        contactName?: T;
        contactEmail?: T;
        contactPhone?: T;
        contactAddress?: T;
        socialMedia?:
          | T
          | {
              facebook?: T;
              twitter?: T;
              instagram?: T;
              linkedin?: T;
              youtube?: T;
              whatsapp?: T;
              telegram?: T;
            };
      };
  globalSeo?:
    | T
    | {
        keywords?: T;
        ogImage?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu_select".
 */
export interface MainMenuSelect<T extends boolean = true> {
  tabs?:
    | T
    | {
        label?: T;
        enableDirectLink?: T;
        enableDropdown?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              customId?: T;
            };
        description?: T;
        descriptionLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                  };
              id?: T;
            };
        navItems?:
          | T
          | {
              style?: T;
              defaultLink?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          customId?: T;
                        };
                    description?: T;
                  };
              featuredLink?:
                | T
                | {
                    tag?: T;
                    label?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              listLinks?:
                | T
                | {
                    tag?: T;
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                customId?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
            };
        id?: T;
      };
  menuCta?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        customId?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        label?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    customId?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SpotlightBlock".
 */
export interface SpotlightBlock {
  element?: ('h1' | 'h2' | 'h3' | 'p') | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'spotlight';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoBlock".
 */
export interface VideoBlock {
  url?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'video';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrBlock".
 */
export interface BrBlock {
  ignore?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'br';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CommandLineBlock".
 */
export interface CommandLineBlock {
  command?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'commandLine';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TemplateCardsBlock".
 */
export interface TemplateCardsBlock {
  templates?:
    | {
        name: string;
        description: string;
        image: string;
        slug: string;
        order: number;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'templateCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  type?: ('default' | 'success' | 'warning' | 'error') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}